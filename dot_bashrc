#
# ~/.bashrc
#

# If not running interactively, don't do anything
[[ $- != *i* ]] && return

# eval $(keychain --eval --quiet id_ed25519)

# alias ls='ls --color=auto'
alias ls='eza'
# alias ls='nnn'
alias find='fd'
alias cat='bat'

function nx() {
    pnpm nx $@ --skip-nx-cache
}

# set up mambaforge https://github.com/conda-forge/miniforge 
[ -f /opt/mambaforge/etc/profile.d/conda.sh ] && source /opt/mambaforge/etc/profile.d/conda.sh

function title(){
    echo -ne "\033]0; bash - $(basename "$PWD") \007"
}

starship_precmd_user_func="title"

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

export EDITOR="nvim"

source /home/luke/.config/broot/launcher/bash/br

fzf-git-diff-checkout-files() {
    git rev-parse HEAD > /dev/null 2>&1 || return
   
    local source_branch
    source_branch=$(fzf-git-branch $1)

    git diff --name-only $source_branch | fzf -m --preview="git diff ..$source_branch --color=always -- {} | less -R" | while read -r file; do
        if git show ${source_branch}:${file} >/dev/null 2>&1; then
            echo "Checkout $file from $source_branch"
            git checkout $source_branch -- "$file"
        else
            echo "Deleting $file"
            git rm "$file" > /dev/null
        fi
    done
}

fzf-git-branch() {
    git rev-parse HEAD > /dev/null 2>&1 || return

    local all
    all=""
    if [[ "$1" = "all" ]]; then
        all="--all"
    fi

    git branch --color=always $all --sort=-committerdate |
        grep -v HEAD |
        fzf --height 50% --ansi --no-multi --preview-window right:65% \
            --preview 'git log -n 50 --color=always --date=short --pretty="format:%C(auto)%cd %h%d %s" $(sed "s/.* //" <<< {})' |
        sed "s/.* //"
}


fzf-git-checkout() {
    git rev-parse HEAD > /dev/null 2>&1 || return

    local branch
    branch=$(fzf-git-branch $1)
    if [[ "$branch" = "" ]]; then
        echo "No branch selected."
        return
    fi

    # If branch name starts with 'remotes/' then it is a remote branch. By
    # using --track and a remote branch name, it is the same as:
    # git checkout -b branchName --track origin/branchName
    if [[ "$branch" = 'remotes/'* ]]; then
        git checkout --track $branch
    else
        git checkout $branch;
    fi
}

alias gb='fzf-git-branch'
alias gco='fzf-git-checkout'
. "$HOME/.cargo/env"

keychain --quiet id_rsa
. ~/.keychain/`uname -n`-sh

# [[ -f ~/.bash-preexec.sh ]] && source ~/.bash-preexec.sh

eval "$(starship init bash)"
eval "$(zoxide init bash)"
eval "$(mcfly init bash)"
# eval "$(atuin init bash)"
